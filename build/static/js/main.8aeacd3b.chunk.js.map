{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Person","person","removeMethod","name","number","onClick","PersonForm","nameChange","numberChange","value","onChange","type","People","people","map","key","Notification","message","className","Error","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","error","setError","useEffect","personService","initialPersons","peopleToShow","filter","toLowerCase","includes","onSubmit","event","preventDefault","newPerson","some","window","confirm","old","find","changed","returnedPerson","concat","setTimeout","target","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8aeacd3b.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Person = ({ person, removeMethod}) => {\n    return (\n    <li>{person.name} {person.number} <button onClick={()=>removeMethod(person.id, person.name)}>Delete</button> </li>\n    )\n  }\n\nconst PersonForm = ({name, number, nameChange, numberChange}) => {\n    return (\n        <div>\n            <div>\n                name: <input \n                value={name}\n                onChange={nameChange}\n                />\n            </div>\n            <div>\n                number: <input \n                value={number}\n                onChange={numberChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </div>\n    )\n}\n\nconst People = ({people, removeMethod}) => {\n    return (\n      <ul>\n        {people.map((person) => \n          <Person key={person.id} person={person} removeMethod={removeMethod}/>\n        )}\n      </ul>\n    )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"message\">\n      {message}\n    </div>\n  )\n}\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const addPerson = event => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n    \n    if (persons.some(person => person.name === newName)) { \n      if(window.confirm(\"Person \" + newName + \" is already added to the phonebook. Do you want to replace the number?\")) {\n        const old = persons.find(person => person.name === newName)\n        const changed = {...old, number: newNumber}\n\n        personService\n        .update(old.id, changed)\n        .then(response => {\n          setPersons(persons.map(person => person.id !== old.id ? person : response))\n        })\n        \n      }\n    } else if (newName !== '') {\n    \n      personService\n        .create(newPerson)\n          .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          })\n\n      setMessage(\n        `Person '${newName}' was added`\n      )\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = (id, name) => {\n    if(window.confirm(\"Delete \" + name)) {\n      personService\n      .remove(id)\n        .then(returnedPerson => {\n        setPersons(persons.filter(person=>person.id !== id))\n        })\n      .catch(error => {\n        setError(\n          `Person '${name}' has already been removed`\n        )\n        setTimeout(() => {\n          setError(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const peopleToShow = newFilter === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter))\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <Error message={error} />\n      <form onSubmit={addPerson}>  \n        <div>\n            Filter shown with: <input \n            value={newFilter}\n            onChange={handleFilterChange}\n            />\n        </div>\n        <h2>Add a new</h2>\n        <PersonForm name={newName} number={newNumber} nameChange={handleNameChange} numberChange={handleNumberChange}/>\n      </form>\n      <h2>Numbers</h2>\n      <People people={peopleToShow} removeMethod={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}